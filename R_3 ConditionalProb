# Conditional probabilities

set.seed(1)
disease <-
  sample(c(0, 1),
         size = 1e6,
         replace = TRUE,
         prob = c(0.98, 0.02))
test <- rep(NA, 1e6)
test[disease == 0] <-
  sample(
    c(0, 1),
    size = sum(disease == 0),
    replace = TRUE,
    prob = c(0.90, 0.10)
  )
test[disease == 1] <-
  sample(
    c(0, 1),
    size = sum(disease == 1),
    replace = TRUE,
    prob = c(0.15, 0.85)
  )

## Probability of a positive test
mean(test)

## Probability of disease when test is negative
mean(test == 0 & disease == 1)    # mean(disease[test == 0])

## Probability of disease when the test is positive
diseased_testedPos <- mean(disease[test == 1])
diseased_testedPos

## Relative risk of disease if test is positive
diseased_testedPos / mean(disease == 1)
comp-check5.R
# comp-check5.R

# Conditional probabilities 

library(dslabs)
library(tidyverse)
data("heights")

## Round heights to nearest whole number and find
## proportion of males for given heights. Plot result.
heights %>%
  mutate(height = round(height)) %>%
  group_by(height) %>%
  summarize(p = mean(sex == "Male")) %>%
  qplot(height, p, data = .)

## Noting high variability of lower height values,
## create groups with same number of points using 
## percentiles. Plot the result
ps <- seq(0, 1, 0.1)   # each group of 10%
heights %>% 
  mutate(g = cut(height, quantile(height, ps), include.lowest = TRUE)) %>% 
  group_by(g) %>% 
  summarise(p = mean(sex == "Male"), height = mean(height)) %>% 
  qplot(height, p, data = .)

## Generate data from a bivariate normal distribution
Sigma <- 9 * matrix(c(1, 0.5, 0.5, 1), 2, 2)
dat <- MASS::mvrnorm(n = 10000, c(69, 69), Sigma = Sigma) %>% 
  data.frame() %>% 
  setNames(c('x', 'y'))

dat %>% 
  mutate(g = cut(x, quantile(x, ps), include.lowest = TRUE)) %>% 
  group_by(g) %>% 
  summarise(y = mean(y), x = mean(x)) %>% 
  qplot(x, y, data = .)
